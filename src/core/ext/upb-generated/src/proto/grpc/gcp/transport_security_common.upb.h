/* This file was generated by upbc (the upb compiler) from the input
 * file:
 *
 *     grpc/gcp/transport_security_common.proto
 *
 * Do not edit -- your changes will be discarded when the file is
 * regenerated. */

#ifndef GRPC_GCP_TRANSPORT_SECURITY_COMMON_PROTO_UPB_H_
#define GRPC_GCP_TRANSPORT_SECURITY_COMMON_PROTO_UPB_H_

#include "upb/upb/generated_code_support.h"

// Must be last.
#include "upb/upb/port/def.inc"

#ifdef __cplusplus
extern "C" {
#endif

#ifndef GRPCUPB
#ifdef GRPCUPB_EXPORT
#define GRPCUPB __declspec(dll_export)
#elifdef GRPCUPB_IMPORT
#define GRPCUPB __declspec(dll_import)
#else
#define GRPCUPB
#endif
#endif

extern const GRPCUPB upb_MiniTable* grpc_gcp_RpcProtocolVersions_msg_init();
extern const GRPCUPB upb_MiniTable* grpc_gcp_RpcProtocolVersions_Version_msg_init();
extern const GRPCUPB upb_MiniTableEnum* grpc_gcp_SecurityLevel_enum_init();

typedef struct grpc_gcp_RpcProtocolVersions grpc_gcp_RpcProtocolVersions;
typedef struct grpc_gcp_RpcProtocolVersions_Version grpc_gcp_RpcProtocolVersions_Version;

typedef enum {
  grpc_gcp_SECURITY_NONE = 0,
  grpc_gcp_INTEGRITY_ONLY = 1,
  grpc_gcp_INTEGRITY_AND_PRIVACY = 2
} grpc_gcp_SecurityLevel;



/* grpc.gcp.RpcProtocolVersions */

UPB_INLINE grpc_gcp_RpcProtocolVersions* grpc_gcp_RpcProtocolVersions_new(upb_Arena* arena) {
  return (grpc_gcp_RpcProtocolVersions*)_upb_Message_New(grpc_gcp_RpcProtocolVersions_msg_init(), arena);
}
UPB_INLINE grpc_gcp_RpcProtocolVersions* grpc_gcp_RpcProtocolVersions_parse(const char* buf, size_t size, upb_Arena* arena) {
  grpc_gcp_RpcProtocolVersions* ret = grpc_gcp_RpcProtocolVersions_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, grpc_gcp_RpcProtocolVersions_msg_init(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE grpc_gcp_RpcProtocolVersions* grpc_gcp_RpcProtocolVersions_parse_ex(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  grpc_gcp_RpcProtocolVersions* ret = grpc_gcp_RpcProtocolVersions_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, grpc_gcp_RpcProtocolVersions_msg_init(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* grpc_gcp_RpcProtocolVersions_serialize(const grpc_gcp_RpcProtocolVersions* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, grpc_gcp_RpcProtocolVersions_msg_init(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* grpc_gcp_RpcProtocolVersions_serialize_ex(const grpc_gcp_RpcProtocolVersions* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, grpc_gcp_RpcProtocolVersions_msg_init(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void grpc_gcp_RpcProtocolVersions_clear_max_rpc_version(grpc_gcp_RpcProtocolVersions* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(grpc_gcp_RpcProtocolVersions_msg_init(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const grpc_gcp_RpcProtocolVersions_Version* grpc_gcp_RpcProtocolVersions_max_rpc_version(const grpc_gcp_RpcProtocolVersions* msg) {
  const grpc_gcp_RpcProtocolVersions_Version* default_val = NULL;
  const grpc_gcp_RpcProtocolVersions_Version* ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(grpc_gcp_RpcProtocolVersions_msg_init(), 1);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool grpc_gcp_RpcProtocolVersions_has_max_rpc_version(const grpc_gcp_RpcProtocolVersions* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(grpc_gcp_RpcProtocolVersions_msg_init(), 1);
  return _upb_Message_HasNonExtensionField(msg, &field);
}
UPB_INLINE void grpc_gcp_RpcProtocolVersions_clear_min_rpc_version(grpc_gcp_RpcProtocolVersions* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(grpc_gcp_RpcProtocolVersions_msg_init(), 2);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE const grpc_gcp_RpcProtocolVersions_Version* grpc_gcp_RpcProtocolVersions_min_rpc_version(const grpc_gcp_RpcProtocolVersions* msg) {
  const grpc_gcp_RpcProtocolVersions_Version* default_val = NULL;
  const grpc_gcp_RpcProtocolVersions_Version* ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(grpc_gcp_RpcProtocolVersions_msg_init(), 2);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE bool grpc_gcp_RpcProtocolVersions_has_min_rpc_version(const grpc_gcp_RpcProtocolVersions* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(grpc_gcp_RpcProtocolVersions_msg_init(), 2);
  return _upb_Message_HasNonExtensionField(msg, &field);
}

UPB_INLINE void grpc_gcp_RpcProtocolVersions_set_max_rpc_version(grpc_gcp_RpcProtocolVersions* msg, grpc_gcp_RpcProtocolVersions_Version* value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(grpc_gcp_RpcProtocolVersions_msg_init(), 1);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE struct grpc_gcp_RpcProtocolVersions_Version* grpc_gcp_RpcProtocolVersions_mutable_max_rpc_version(grpc_gcp_RpcProtocolVersions* msg, upb_Arena* arena) {
  struct grpc_gcp_RpcProtocolVersions_Version* sub = (struct grpc_gcp_RpcProtocolVersions_Version*)grpc_gcp_RpcProtocolVersions_max_rpc_version(msg);
  if (sub == NULL) {
    sub = (struct grpc_gcp_RpcProtocolVersions_Version*)_upb_Message_New(grpc_gcp_RpcProtocolVersions_Version_msg_init(), arena);
    if (sub) grpc_gcp_RpcProtocolVersions_set_max_rpc_version(msg, sub);
  }
  return sub;
}
UPB_INLINE void grpc_gcp_RpcProtocolVersions_set_min_rpc_version(grpc_gcp_RpcProtocolVersions* msg, grpc_gcp_RpcProtocolVersions_Version* value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(grpc_gcp_RpcProtocolVersions_msg_init(), 2);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE struct grpc_gcp_RpcProtocolVersions_Version* grpc_gcp_RpcProtocolVersions_mutable_min_rpc_version(grpc_gcp_RpcProtocolVersions* msg, upb_Arena* arena) {
  struct grpc_gcp_RpcProtocolVersions_Version* sub = (struct grpc_gcp_RpcProtocolVersions_Version*)grpc_gcp_RpcProtocolVersions_min_rpc_version(msg);
  if (sub == NULL) {
    sub = (struct grpc_gcp_RpcProtocolVersions_Version*)_upb_Message_New(grpc_gcp_RpcProtocolVersions_Version_msg_init(), arena);
    if (sub) grpc_gcp_RpcProtocolVersions_set_min_rpc_version(msg, sub);
  }
  return sub;
}

/* grpc.gcp.RpcProtocolVersions.Version */

UPB_INLINE grpc_gcp_RpcProtocolVersions_Version* grpc_gcp_RpcProtocolVersions_Version_new(upb_Arena* arena) {
  return (grpc_gcp_RpcProtocolVersions_Version*)_upb_Message_New(grpc_gcp_RpcProtocolVersions_Version_msg_init(), arena);
}
UPB_INLINE grpc_gcp_RpcProtocolVersions_Version* grpc_gcp_RpcProtocolVersions_Version_parse(const char* buf, size_t size, upb_Arena* arena) {
  grpc_gcp_RpcProtocolVersions_Version* ret = grpc_gcp_RpcProtocolVersions_Version_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, grpc_gcp_RpcProtocolVersions_Version_msg_init(), NULL, 0, arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE grpc_gcp_RpcProtocolVersions_Version* grpc_gcp_RpcProtocolVersions_Version_parse_ex(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  grpc_gcp_RpcProtocolVersions_Version* ret = grpc_gcp_RpcProtocolVersions_Version_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, ret, grpc_gcp_RpcProtocolVersions_Version_msg_init(), extreg, options, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* grpc_gcp_RpcProtocolVersions_Version_serialize(const grpc_gcp_RpcProtocolVersions_Version* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, grpc_gcp_RpcProtocolVersions_Version_msg_init(), 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* grpc_gcp_RpcProtocolVersions_Version_serialize_ex(const grpc_gcp_RpcProtocolVersions_Version* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(msg, grpc_gcp_RpcProtocolVersions_Version_msg_init(), options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void grpc_gcp_RpcProtocolVersions_Version_clear_major(grpc_gcp_RpcProtocolVersions_Version* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(grpc_gcp_RpcProtocolVersions_Version_msg_init(), 1);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE uint32_t grpc_gcp_RpcProtocolVersions_Version_major(const grpc_gcp_RpcProtocolVersions_Version* msg) {
  uint32_t default_val = (uint32_t)0u;
  uint32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(grpc_gcp_RpcProtocolVersions_Version_msg_init(), 1);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}
UPB_INLINE void grpc_gcp_RpcProtocolVersions_Version_clear_minor(grpc_gcp_RpcProtocolVersions_Version* msg) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(grpc_gcp_RpcProtocolVersions_Version_msg_init(), 2);
  _upb_Message_ClearNonExtensionField(msg, &field);
}
UPB_INLINE uint32_t grpc_gcp_RpcProtocolVersions_Version_minor(const grpc_gcp_RpcProtocolVersions_Version* msg) {
  uint32_t default_val = (uint32_t)0u;
  uint32_t ret;
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(grpc_gcp_RpcProtocolVersions_Version_msg_init(), 2);
  _upb_Message_GetNonExtensionField(msg, &field, &default_val, &ret);
  return ret;
}

UPB_INLINE void grpc_gcp_RpcProtocolVersions_Version_set_major(grpc_gcp_RpcProtocolVersions_Version* msg, uint32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(grpc_gcp_RpcProtocolVersions_Version_msg_init(), 1);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}
UPB_INLINE void grpc_gcp_RpcProtocolVersions_Version_set_minor(grpc_gcp_RpcProtocolVersions_Version* msg, uint32_t value) {
  const upb_MiniTableField field = *upb_MiniTable_FindFieldByNumber(grpc_gcp_RpcProtocolVersions_Version_msg_init(), 2);
  _upb_Message_SetNonExtensionField(msg, &field, &value);
}

#ifdef __cplusplus
}  /* extern "C" */
#endif

#include "upb/upb/port/undef.inc"

#endif  /* GRPC_GCP_TRANSPORT_SECURITY_COMMON_PROTO_UPB_H_ */
